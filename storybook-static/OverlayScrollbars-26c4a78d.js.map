{"version":3,"file":"OverlayScrollbars-26c4a78d.js","sources":["../node_modules/@storybook/components/dist/esm/OverlayScrollbars-26c4a78d.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, a as __rest } from './index-b45716e8.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["obj","_typeof","Symbol","iterator","constructor","prototype","OverlayScrollbars$1","exports","module","global","factory","document","undefined","window","commonjsGlobal","undefined$1","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","firstLetterToUpper","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","x","innerWidth","documentElement","body","innerHeight","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","bind","windowSize","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","extend","fromIndex","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","callback","isArrayLike","isFunction","value","tokens","match","join","elem","selector","nodeList","parentNode","querySelectorAll","el","strategy","child","insertAdjacentElement","insertAdjacentHTML","nodeType","val","parseCSSVal","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","inArray","setCSSVal","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","push","css","isEmptyObject","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","stop","max","parseFloat","setAnimationValue","start","pos","speacialEasing","startTime","startNextAnimationInQ","frame","clearQ","jumpToEnd","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","stripAndCollapse","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","matches","is","elementIsVisible","childs","_each","animate","jump","_stop","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","setupResponsiveEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","addDestroyEventListener","resizeObserverObj","disconnect","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","changed","hostSize","checkCache","_hostSizeChanged","refreshScrollbarsAutoHide","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","destroy","setupHostMouseTouchEvents","hostOnMouseMove","hostOnMouseEnter","hostOnMouseLeave","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","bodyMinSizeChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","disconnectMutationObservers","connectMutationObservers","oldSize","setupResizeObserver","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","updateOnLoadCallback","newOptions","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","doClearInterval","clearInterval","updateTextarea","keyCode","setInterval","isSizeAffectingCSSProperty","nativeOverlayScrollbarsAreActive","textareaOnKeyDown","textareaOnKeyUp","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","contentOnTransitionEnd","viewportOnScroll","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","horizontalElements","verticalElements","resetScrollbarDOM","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","increaseTrackScrollAmount","decreaseTrackScrollAmount","isTouchEvent","getPreparedScrollbarsOption","onMouseTouchDownContinue","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","getPointerPosition","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","documentDragMove","documentKeyDown","documentKeyUp","documentOnSelectStart","stopClickEventPropagation","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onHandleMouseTouchDown","onTrackMouseTouchDown","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","takeRecords","option","changedOps","setObjectPropVal","setOptions","getObjectPropVal","extName","removeExt","pop","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","currValue","allowedValues","isX","coordinateProps","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","checkSettingsStringValue","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","generateMargin","getPerAxisValue","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","getFinalScroll","getRawScroll","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","extended","changePropertyName","destroyed","prepare","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","initBodyScroll","_bodyMouseTouchDownListener","setupStructureEvents","setupScrollbarEvents","setupScrollbarCornerEvents","createMutationObservers","hostOnResized","activeElement","focus","valid","construct","pluginTargetElements","optsIsPlainObj","initOverlayScrollbarsStatics","OverlayScrollbarsInstance","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","__rest","osTargetRef","useRef","useEffect","mergeHostClassNames","assign","ref","_jsx","_osInstance$getElemen","osClassNames"],"mappings":"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"}